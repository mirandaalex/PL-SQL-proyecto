SET SERVEROUTPUT ON
--*******************************FUNCIONES**********************************
--FUNCION PARA OBTENER SI UN LECTOR TIENE MULTA
CREATE OR REPLACE FUNCTION FT_MULTA (V_IDLECTOR CHAR)
RETURN NUMBER
IS
V_ADEUDO LECTOR.ADEUDO%TYPE;
V_MULTA NUMBER;
BEGIN
    SELECT ADEUDO
    INTO V_ADEUDO
    FROM LECTOR
    WHERE IDLECTOR = V_IDLECTOR; 
    IF (V_ADEUDO <> 0 OR V_ADEUDO <> NULL)
        THEN V_MULTA:=1;
    ELSE
        V_MULTA:=0;
    END IF;
    RETURN(V_MULTA);
END;
/
--FUNCION PARA OBTENER DISPONIBILIDAD DE MATERIAL POR SU ESTATUS
CREATE OR REPLACE FUNCTION FT_PRESTAMODISP (V_IDMATERIAL CHAR,vEJEM NUMBER)
RETURN VARCHAR2
IS
V_ESTATUS EJEMPLAR.ESTATUS%TYPE;
BEGIN
    SELECT ESTATUS
    INTO V_ESTATUS
    FROM EJEMPLAR
    WHERE IDMATERIAL = V_IDMATERIAL AND NOEJEMPLAR=vEJEM;
    RETURN(V_ESTATUS);
END;
/
--FUNCION QUE CALCULA LA FECHA DE DEVOLUCION A PARTIR DE LA FECHA ACTUAL
--IN NUMERO de identificacion del lector
--OUT FECHA que representa la fecha de devolucion 
CREATE OR REPLACE FUNCTION FT_FECHADEV (IDLECT CHAR)
RETURN DATE
IS
VDIASPREST TIPOLECTOR.DIASPREST%TYPE;
VDATEDEV DATE;
BEGIN
    SELECT DIASPREST
    INTO VDIASPREST
    FROM LECTOR  
    NATURAL JOIN TIPOLECTOR 
    WHERE IDLECTOR=IDLECT;
    VDATEDEV:=SYSDATE+VDIASPREST;
    RETURN (VDATEDEV);
END FT_FECHADEV;
/
--FUNCION PARA LOS REFRENDOS
CREATE OR REPLACE FUNCTION FT_OBTIENE_REFRENDO(IDLECT CHAR)
RETURN NUMBER
IS
	VREFRENDO NUMBER(5);
	VTIPO VARCHAR2(12);
BEGIN
	SELECT TIPO 
    INTO VTIPO
	FROM LECTOR
	WHERE IDLECTOR = IDLECT; 
	IF VTIPO = 'ESTUDIANTE' THEN
        SELECT REFRENDOS 
        INTO VREFRENDO
        FROM TIPOLECTOR
        WHERE TIPO=VTIPO;
	END IF;
	IF VTIPO = 'PROFESOR' THEN
		SELECT REFRENDOS 
        INTO VREFRENDO
        FROM TIPOLECTOR
        WHERE TIPO=VTIPO;
	END IF;
	IF VTIPO = 'INVESTIGADOR' THEN
		SELECT REFRENDOS 
        INTO VREFRENDO
        FROM TIPOLECTOR
        WHERE TIPO=VTIPO;
	END IF;
	RETURN (VREFRENDO);
END FT_OBTIENE_REFRENDO;
/
--FUNCION QUE DEVUELVE EL NUMERO DE REFRENDOS RESTANTES
CREATE OR REPLACE FUNCTION FT_ACTUALIZA_REFRENDO(VIDLECT CHAR,VNOEJEMPLAR NUMBER,VIDMATERIAL CHAR)
RETURN NUMBER
IS
	VREFRENDOSRESTANTES NUMBER(5);
BEGIN
	SELECT NUMREFRENDO 
    INTO VREFRENDOSRESTANTES
	FROM PRESTAMO
	WHERE IDLECTOR = VIDLECT 
	AND NOEJEMPLAR = VNOEJEMPLAR
	AND IDMATERIAL = VIDMATERIAL;
	VREFRENDOSRESTANTES:=VREFRENDOSRESTANTES - 1;
	RETURN (VREFRENDOSRESTANTES);
END FT_ACTUALIZA_REFRENDO;
/
--FUNCION QUE CALCULA EL NUMERO DE MATERIALES QUE PUEDE SACAR
CREATE OR REPLACE FUNCTION FT_MATERIALRESTANTE(vIDLEC IN CHAR)
RETURN number
IS
vCantidad NUMBER;
vMax NUMBER;
VAUX NUMBER;
BEGIN
    SELECT count(*)  
    INTO vCantidad
    FROM prestamo
    WHERE IdLector=vIDLEC;
    SELECT limitemat
    INTO vMax
    FROM tipolector
    WHERE TIPO=(SELECT TIPO
                FROM LECTOR
                WHERE IdLector=vIDLEC);
    IF (vCantidad=0) THEN
        return(vmax);
    ELSE
        VAUX:=vmax-vCantidad;
        return(VAUX);
    END IF;
END FT_MATERIALRESTANTE;
/

--FUNCION CALCULA DIFERENCIA DE DIAS ENTRE DOS FECHAS
CREATE OR REPLACE FUNCTION ftDifDias(iFECHA DATE, fFECHA DATE) 
RETURN NUMBER
IS 
vtemp NUMBER(4):= 0;
BEGIN
SELECT trunc(iFECHA)-trunc(fFECHA)
    into vtemp
    FROM dual;
    return vtemp;
END ftDifDias;
/


--FUNCION QUE CALCULA EL TOTAL QUE ALGUIEN DEBE
CREATE OR REPLACE FUNCTION FT_TOTALMULTAS(vIDLEC IN CHAR)
RETURN NUMBER
IS
    vTotal NUMBER(9):=0;
    CURSOR prestamos IS
    SELECT * FROM prestamo WHERE IDLECTOR=vIDLEC;
    vPRES prestamo%ROWTYPE;
BEGIN
    OPEN prestamos;
    FETCH prestamos INTO vPRES;
    WHILE prestamos%FOUND LOOP
        IF vPRES.MONTO IS NOT NULL THEN
            vTotal:=vTotal + vpres.monto;
        END IF;
        FETCH prestamos INTO vPRES;
    END LOOP;
    CLOSE prestamos;
    RETURN vTotal;
END;


--FUNCION QUE VERIFICA SI HAY MULATAS A CREAR, de haber las crea
CREATE OR REPLACE FUNCTION ft_VERFICAMULTA(vIDLEC IN CHAR)
RETURN NUMBER
IS
    CURSOR prestamos IS
    SELECT * FROM prestamo WHERE IDLECTOR=vIDLEC;
    vPRES prestamo%ROWTYPE;
    vDias NUMBER(2):=0;
    vMonto NUMERIC(6):=0;
BEGIN
    OPEN prestamos;
    FETCH prestamos INTO vPRES;
    WHILE prestamos%FOUND LOOP
        vDias:=ftDifDias(SYSDATE,vPRES.FECHAVENC);
        if vdias>0 THEN
            DBMS_OUTPUT.PUT_LINE('dias de atraso: '||vDias);
            vMonto:=vDias*2;
            UPDATE prestamo SET diasatraso=vDias,
            monto=vmonto,fechamulta= SYSDATE
            WHERE idmaterial=vPRES.idmaterial AND noejemplar=vPRES.noejemplar;
        END IF;
        FETCH prestamos INTO vPRES;
    END LOOP;
    CLOSE prestamos;
    RETURN 1;
END;
/


DROP FUNCTION FT_PRESTAMODISP;
DROP FUNCTION FT_MULTA;
DROP FUNCTION FT_FECHADEV;
DROP FUNCTION FT_OBTIENE_REFRENDO;
DROP FUNCTION FT_ACTUALIZA_REFRENDO;
DROP FUNCTION FT_MATERIALRESTANTE;
COMMIT;





